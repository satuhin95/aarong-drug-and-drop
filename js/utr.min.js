!(function () {
    "use strict";
    var l, n, d, f;
    function r(t) {
        try {
            return (t.defaultView && t.defaultView.frameElement) || null;
        } catch (e) {
            return null;
        }
    }
    function u(t) {
        (this.time = t.time),
            (this.target = t.target),
            (this.rootBounds = a(t.rootBounds)),
            (this.boundingClientRect = a(t.boundingClientRect)),
            (this.intersectionRect = a(t.intersectionRect || i())),
            (this.isIntersecting = !!t.intersectionRect);
        var e = this.boundingClientRect,
            t = e.width * e.height,
            e = this.intersectionRect,
            e = e.width * e.height;
        this.intersectionRatio = t ? Number((e / t).toFixed(4)) : this.isIntersecting ? 1 : 0;
    }
    function t(t, e) {
        var e = e || {};
        if ("function" != typeof t) throw new Error("callback must be a function");
        if (e.root && 1 != e.root.nodeType) throw new Error("root must be an Element");
        (this._checkForIntersections = o(this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT)),
            (this._callback = t),
            (this._observationTargets = []),
            (this._queuedEntries = []),
            (this._rootMarginValues = this._parseRootMargin(e.rootMargin)),
            (this.thresholds = this._initThresholds(e.threshold)),
            (this.root = e.root || null),
            (this.rootMargin = this._rootMarginValues
                .map(function (t) {
                    return t.value + t.unit;
                })
                .join(" ")),
            (this._monitoringDocuments = []),
            (this._monitoringUnsubscribes = []);
    }
    function h() {
        return window.performance && performance.now && performance.now();
    }
    function o(t, e) {
        var n = null;
        return function () {
            n =
                n ||
                setTimeout(function () {
                    t(), (n = null);
                }, e);
        };
    }
    function s(t, e, n, o) {
        "function" == typeof t.addEventListener ? t.addEventListener(e, n, o || !1) : "function" == typeof t.attachEvent && t.attachEvent("on" + e, n);
    }
    function c(t, e, n, o) {
        "function" == typeof t.removeEventListener ? t.removeEventListener(e, n, o || !1) : "function" == typeof t.detatchEvent && t.detatchEvent("on" + e, n);
    }
    function p(t, e) {
        var n = Math.max(t.top, e.top),
            o = Math.min(t.bottom, e.bottom),
            i = Math.max(t.left, e.left),
            r = Math.min(t.right, e.right),
            t = r - i,
            e = o - n;
        return 0 <= t && 0 <= e ? { top: n, bottom: o, left: i, right: r, width: t, height: e } : null;
    }
    function g(t) {
        var e;
        try {
            e = t.getBoundingClientRect();
        } catch (n) {}
        return e ? (e.width && e.height ? e : { top: e.top, right: e.right, bottom: e.bottom, left: e.left, width: e.right - e.left, height: e.bottom - e.top }) : i();
    }
    function i() {
        return { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };
    }
    function a(t) {
        return !t || "x" in t ? t : { top: t.top, y: t.top, bottom: t.bottom, left: t.left, x: t.left, right: t.right, width: t.width, height: t.height };
    }
    function m(t, e) {
        var n = e.top - t.top,
            t = e.left - t.left;
        return { top: n, left: t, height: e.height, width: e.width, bottom: n + e.height, right: t + e.width };
    }
    function e(t, e) {
        for (var n = e; n; ) {
            if (n == t) return !0;
            n = v(n);
        }
        return !1;
    }
    function v(t) {
        var e = t.parentNode;
        return 9 == t.nodeType && t != l ? r(t) : (e = e && e.assignedSlot ? e.assignedSlot.parentNode : e) && 11 == e.nodeType && e.host ? e.host : e;
    }
    "object" == typeof window &&
        ("IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype
            ? "isIntersecting" in window.IntersectionObserverEntry.prototype ||
              Object.defineProperty(window.IntersectionObserverEntry.prototype, "isIntersecting", {
                  get: function () {
                      return 0 < this.intersectionRatio;
                  },
              })
            : ((l = (function (t) {
                  for (var e = t, n = r(e); n; ) n = r((e = n.ownerDocument));
                  return e;
              })(window.document)),
              (n = []),
              (f = d = null),
              (t.prototype.THROTTLE_TIMEOUT = 100),
              (t.prototype.POLL_INTERVAL = null),
              (t.prototype.USE_MUTATION_OBSERVER = !0),
              (t._setupCrossOriginUpdater = function () {
                  return (d =
                      d ||
                      function (t, e) {
                          (f = t && e ? m(t, e) : i()),
                              n.forEach(function (t) {
                                  t._checkForIntersections();
                              });
                      });
              }),
              (t._resetCrossOriginUpdater = function () {
                  f = d = null;
              }),
              (t.prototype.observe = function (e) {
                  var t;
                  if (
                      !this._observationTargets.some(function (t) {
                          return t.element == e;
                      })
                  ) {
                      if (!e || 1 != e.nodeType) throw new Error("target must be an Element");
                      this._registerInstance(), this._observationTargets.push({ element: e, entry: null }), this._monitorIntersections(e.ownerDocument), this._checkForIntersections();
                  }
              }),
              (t.prototype.unobserve = function (e) {
                  (this._observationTargets = this._observationTargets.filter(function (t) {
                      return t.element != e;
                  })),
                      this._unmonitorIntersections(e.ownerDocument),
                      0 == this._observationTargets.length && this._unregisterInstance();
              }),
              (t.prototype.disconnect = function () {
                  (this._observationTargets = []), this._unmonitorAllIntersections(), this._unregisterInstance();
              }),
              (t.prototype.takeRecords = function () {
                  var t = this._queuedEntries.slice();
                  return (this._queuedEntries = []), t;
              }),
              (t.prototype._initThresholds = function (t) {
                  var t = t || [0];
                  return (t = !Array.isArray(t) ? [t] : t).sort().filter(function (t, e, n) {
                      if ("number" != typeof t || isNaN(t) || t < 0 || 1 < t) throw new Error("threshold must be a number between 0 and 1 inclusively");
                      return t !== n[e - 1];
                  });
              }),
              (t.prototype._parseRootMargin = function (t) {
                  var e,
                      t = (t || "0px").split(/\s+/).map(function (t) {
                          var t = /^(-?\d*\.?\d+)(px|%)$/.exec(t);
                          if (!t) throw new Error("rootMargin must be specified in pixels or percent");
                          return { value: parseFloat(t[1]), unit: t[2] };
                      });
                  return (t[1] = t[1] || t[0]), (t[2] = t[2] || t[0]), (t[3] = t[3] || t[1]), t;
              }),
              (t.prototype._monitorIntersections = function (e) {
                  var t = e.defaultView,
                      n,
                      o,
                      i,
                      t;
                  t &&
                      -1 == this._monitoringDocuments.indexOf(e) &&
                      ((n = this._checkForIntersections),
                      (i = o = null),
                      this.POLL_INTERVAL
                          ? (o = t.setInterval(n, this.POLL_INTERVAL))
                          : (s(t, "resize", n, !0),
                            s(e, "scroll", n, !0),
                            this.USE_MUTATION_OBSERVER && "MutationObserver" in t && (i = new t.MutationObserver(n)).observe(e, { attributes: !0, childList: !0, characterData: !0, subtree: !0 })),
                      this._monitoringDocuments.push(e),
                      this._monitoringUnsubscribes.push(function () {
                          var t = e.defaultView;
                          t && (o && t.clearInterval(o), c(t, "resize", n, !0)), c(e, "scroll", n, !0), i && i.disconnect();
                      }),
                      e == ((this.root && this.root.ownerDocument) || l) || ((t = r(e)) && this._monitorIntersections(t.ownerDocument)));
              }),
              (t.prototype._unmonitorIntersections = function (o) {
                  var t = this._monitoringDocuments.indexOf(o),
                      i,
                      e,
                      n,
                      n;
                  -1 != t &&
                      ((i = (this.root && this.root.ownerDocument) || l),
                      this._observationTargets.some(function (t) {
                          var e;
                          if ((e = t.element.ownerDocument) == o) return !0;
                          for (; e && e != i; ) {
                              var n = r(e),
                                  e;
                              if ((e = n && n.ownerDocument) == o) return !0;
                          }
                          return !1;
                      }) || ((n = this._monitoringUnsubscribes[t]), this._monitoringDocuments.splice(t, 1), this._monitoringUnsubscribes.splice(t, 1), n(), o == i || ((n = r(o)) && this._unmonitorIntersections(n.ownerDocument))));
              }),
              (t.prototype._unmonitorAllIntersections = function () {
                  var t = this._monitoringUnsubscribes.slice(0);
                  this._monitoringDocuments.length = 0;
                  for (var e = (this._monitoringUnsubscribes.length = 0); e < t.length; e++) t[e]();
              }),
              (t.prototype._checkForIntersections = function () {
                  var s, c;
                  (!this.root && d && !f) ||
                      ((s = this._rootIsInDom()),
                      (c = s ? this._getRootRect() : i()),
                      this._observationTargets.forEach(function (t) {
                          var e = t.element,
                              n = g(e),
                              o = this._rootContainsTarget(e),
                              i = t.entry,
                              r = s && o && this._computeTargetAndRootIntersection(e, n, c),
                              r = (t.entry = new u({ time: h(), target: e, boundingClientRect: n, rootBounds: d && !this.root ? null : c, intersectionRect: r }));
                          i ? (s && o ? this._hasCrossedThreshold(i, r) && this._queuedEntries.push(r) : i && i.isIntersecting && this._queuedEntries.push(r)) : this._queuedEntries.push(r);
                      }, this),
                      this._queuedEntries.length && this._callback(this.takeRecords(), this));
              }),
              (t.prototype._computeTargetAndRootIntersection = function (t, e, n) {
                  if ("none" != window.getComputedStyle(t).display) {
                      for (var o = e, i = v(t), r = !1; !r && i; ) {
                          var s = null,
                              c = 1 == i.nodeType ? window.getComputedStyle(i) : {},
                              u,
                              h,
                              a,
                              r,
                              a;
                          if ("none" == c.display) return null;
                          if (
                              (i == this.root || 9 == i.nodeType
                                  ? ((r = !0),
                                    i == this.root || i == l
                                        ? d && !this.root
                                            ? !f || (0 == f.width && 0 == f.height)
                                                ? (o = s = i = null)
                                                : (s = f)
                                            : (s = n)
                                        : ((h = (u = v(i)) && g(u)), (a = u && this._computeTargetAndRootIntersection(u, h, n)), h && a ? ((i = u), (s = m(h, a))) : (o = i = null)))
                                  : i != (a = i.ownerDocument).body && i != a.documentElement && "visible" != c.overflow && (s = g(i)),
                              !(o = s ? p(s, o) : o))
                          )
                              break;
                          i = i && v(i);
                      }
                      return o;
                  }
              }),
              (t.prototype._getRootRect = function () {
                  var t, e, t, t;
                  return (
                      (t = this.root
                          ? g(this.root)
                          : ((e = l.documentElement),
                            (t = l.body),
                            { top: 0, left: 0, right: e.clientWidth || t.clientWidth, width: e.clientWidth || t.clientWidth, bottom: e.clientHeight || t.clientHeight, height: e.clientHeight || t.clientHeight })),
                      this._expandRectByRootMargin(t)
                  );
              }),
              (t.prototype._expandRectByRootMargin = function (n) {
                  var t = this._rootMarginValues.map(function (t, e) {
                          return "px" == t.unit ? t.value : (t.value * (e % 2 ? n.width : n.height)) / 100;
                      }),
                      t = { top: n.top - t[0], right: n.right + t[1], bottom: n.bottom + t[2], left: n.left - t[3] };
                  return (t.width = t.right - t.left), (t.height = t.bottom - t.top), t;
              }),
              (t.prototype._hasCrossedThreshold = function (t, e) {
                  var n = t && t.isIntersecting ? t.intersectionRatio || 0 : -1,
                      o = e.isIntersecting ? e.intersectionRatio || 0 : -1;
                  if (n !== o)
                      for (var i = 0; i < this.thresholds.length; i++) {
                          var r = this.thresholds[i];
                          if (r == n || r == o || r < n != r < o) return !0;
                      }
              }),
              (t.prototype._rootIsInDom = function () {
                  return !this.root || e(l, this.root);
              }),
              (t.prototype._rootContainsTarget = function (t) {
                  return e(this.root || l, t) && (!this.root || this.root.ownerDocument == t.ownerDocument);
              }),
              (t.prototype._registerInstance = function () {
                  n.indexOf(this) < 0 && n.push(this);
              }),
              (t.prototype._unregisterInstance = function () {
                  var t = n.indexOf(this);
                  -1 != t && n.splice(t, 1);
              }),
              (window.IntersectionObserver = t),
              (window.IntersectionObserverEntry = u)));
})(),
    (function () {
        var s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        window._b64dec = function (t) {
            (t = String(t).replace(/[\t\n\f\r ]+/g, "")), (t += "==".slice(2 - (3 & t.length)));
            for (var e, n = "", o, i, r = 0; r < t.length; )
                (e = (s.indexOf(t.charAt(r++)) << 18) | (s.indexOf(t.charAt(r++)) << 12) | ((o = s.indexOf(t.charAt(r++))) << 6) | (i = s.indexOf(t.charAt(r++)))),
                    (n += 64 === o ? String.fromCharCode((e >> 16) & 255) : 64 === i ? String.fromCharCode((e >> 16) & 255, (e >> 8) & 255) : String.fromCharCode((e >> 16) & 255, (e >> 8) & 255, 255 & e));
            return n;
        };
    })(),
    (function () {
        var e = ["s", "m", "v"],
            t = 0,
            n = 0,
            o = 0,
            i,
            r;
        function s(t, e) {
            if (!e) return null;
            t = t.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var n,
                o,
                e = new RegExp("[\\?&]" + t + "=([^&#]*)").exec(e);
            return null == e ? null : e[1];
        }
        function c(t) {
            var e = [],
                n;
            for (n in t) e.push(encodeURIComponent(n) + "=" + encodeURIComponent(t[n]));
            return e.join("&");
        }
        function u(t, e) {
            return t + "?" + c(e);
        }
        var h = document.getElementById("__eutrs"),
            a = h ? h.src : "",
            l = s("baId", a) || "",
            d = s("bId", a) || "",
            f = s("coId", a) || "",
            p = s("sId", a) || "",
            g = s("pId", a) || "",
            m = s("cId", a) || "",
            v = s("crId", a) || "",
            b = s("dvt", a) || "",
            _ = s("dvm", a) || "",
            w = s("locid", a) || "",
            I = s("audid", a) || "",
            y = s("prb", a) || "",
            h = 1 === parseInt(s("fla", a), 10) || !1,
            E = s("src", a) || "",
            T = s("spt", a) || "",
            R = _b64dec("aHR0cHM6Ly9kc3AtdHJrLmVza2ltaS5jb20vdHJ2"),
            O,
            x,
            M,
            D,
            C,
            A,
            i,
            r;
        function L(t) {
            var t = e.indexOf(t);
            -1 < t && (e.splice(t, 1), (new Image().src = V()));
        }
        function V() {
            return u(R, { coId: f, bId: d, cId: m, crId: v, sId: p, pId: g, trve: t, trv: n, trvv: "v2", dvt: b, dvm: _, locid: w, audid: I, prb: y, src: E, spt: T, _: new Date().getTime() });
        }
        function U() {
            1 !== n && ((n = 1), L("v"));
        }
        function k() {
            1 !== t && ((t = 1), L("m"));
        }
        function S() {
            1 !== o && ((o = 1), L("s"));
        }
        function B(t) {
            t.forEach(function (t) {
                !O && 0 != t.intersectionRatio && t.isIntersecting && 0 < t.intersectionRect.width && 0 < t.intersectionRect.height && ((O = !0), U());
            });
        }
        function F() {
            for (var t = [], e = 20, n = 1, o; n <= 20; n++) {
                t.push(n / 20);
            }
            return t.push(0), t;
        }
        d &&
            l &&
            m &&
            v &&
            p &&
            g &&
            (S("s"),
            "IntersectionObserver" in window &&
                (h
                    ? ((O = !1),
                      (x = { root: null, rootMargin: "0px", threshold: F() }),
                      (M = function (t, e) {
                          var t, e;
                          "__eFlAdEl" in window
                              ? D()
                              : 0 < t &&
                                ((e *= 2),
                                --t,
                                setTimeout(function () {
                                    M(t, e);
                                }, e));
                      }),
                      (D = function () {
                          k(), (i = new IntersectionObserver(B, x)).observe(window.__eFlAdEl);
                      }),
                      M(15, 1))
                    : document.getElementById(l) &&
                      (k(),
                      (C = function (t, e) {
                          delete t.visibleTimeout, A(e.takeRecords()), t.isVisible && (delete t.isVisible, e.unobserve(t), U());
                      }),
                      (A = function (t) {
                          t.forEach(function (t) {
                              var e = t.target;
                              (e.isVisible = t.isIntersecting && 0.5 <= t.intersectionRatio), e.isVisible ? (e.visibleTimeout = setTimeout(C, 1e3, e, i)) : e.visibleTimeout && (clearTimeout(e.visibleTimeout), delete e.visibleTimeout);
                          });
                      }),
                      (i = new IntersectionObserver(A, { root: null, rootMargin: "0px", threshold: [0.5] })).observe(document.getElementById(l)))));
    })();
